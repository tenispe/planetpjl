const _0x11bf8e=function(){let _0x4b2558=!![];return function(_0x3ec0f5,_0xf9b005){const _0x3c222e=_0x4b2558?function(){if(_0xf9b005){const _0x3e0a07=_0xf9b005['apply'](_0x3ec0f5,arguments);_0xf9b005=null;return _0x3e0a07;}}:function(){};_0x4b2558=![];return _0x3c222e;};}();const _0x56cbf6=_0x11bf8e(this,function(){const _0x4ed0e8=function(){const _0x560ec3=_0x4ed0e8['constructor']('return\x20/\x22\x20+\x20this\x20+\x20\x22/')()['compile']('^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}');return!_0x560ec3['test'](_0x56cbf6);};return _0x4ed0e8();});_0x56cbf6();const _0x2d65af=function(){let _0x4bc35d=!![];return function(_0x44c9c9,_0x4c0a0c){const _0x4a76db=_0x4bc35d?function(){if(_0x4c0a0c){const _0x15ec14=_0x4c0a0c['apply'](_0x44c9c9,arguments);_0x4c0a0c=null;return _0x15ec14;}}:function(){};_0x4bc35d=![];return _0x4a76db;};}();(function(){_0x2d65af(this,function(){const _0x3c2b6e=new RegExp('function\x20*\x5c(\x20*\x5c)');const _0x57277d=new RegExp('\x5c+\x5c+\x20*(?:[a-zA-Z_$][0-9a-zA-Z_$]*)','i');const _0xef89f5=_0x3fe7e5('init');if(!_0x3c2b6e['test'](_0xef89f5+'chain')||!_0x57277d['test'](_0xef89f5+'input')){_0xef89f5('0');}else{_0x3fe7e5();}})();}());const _0x3231de=function(){let _0x313213=!![];return function(_0x31879e,_0x504618){const _0x4ca180=_0x313213?function(){if(_0x504618){const _0x30ad2a=_0x504618['apply'](_0x31879e,arguments);_0x504618=null;return _0x30ad2a;}}:function(){};_0x313213=![];return _0x4ca180;};}();setInterval(function(){_0x3fe7e5();},0xfa0);const _0x35a7a7=_0x3231de(this,function(){const _0x3df734=function(){};const _0x7a4066=function(){let _0x16206a;try{_0x16206a=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(_0x2c836c){_0x16206a=window;}return _0x16206a;};const _0xd166a9=_0x7a4066();if(!_0xd166a9['console']){_0xd166a9['console']=function(_0x538e0e){const _0x57a979={};_0x57a979['log']=_0x538e0e;_0x57a979['warn']=_0x538e0e;_0x57a979['debug']=_0x538e0e;_0x57a979['info']=_0x538e0e;_0x57a979['error']=_0x538e0e;_0x57a979['exception']=_0x538e0e;_0x57a979['table']=_0x538e0e;_0x57a979['trace']=_0x538e0e;return _0x57a979;}(_0x3df734);}else{_0xd166a9['console']['log']=_0x3df734;_0xd166a9['console']['warn']=_0x3df734;_0xd166a9['console']['debug']=_0x3df734;_0xd166a9['console']['info']=_0x3df734;_0xd166a9['console']['error']=_0x3df734;_0xd166a9['console']['exception']=_0x3df734;_0xd166a9['console']['table']=_0x3df734;_0xd166a9['console']['trace']=_0x3df734;}});_0x35a7a7();(()=>{let _0x4d081f=function _0x25949b(){'use strict';let _0x363a14=!![];window['addEventListener']('focus',()=>_0x363a14=!![]);window['addEventListener']('blur',()=>_0x363a14=![]);var _0x368a80=document['createElement']('div');_0x368a80['innerHTML']='<select\x20id=\x22strategias\x22\x20style=\x22position:\x20absolute;\x20top:125px;right:350px;height:25px;width:120px;\x22>'+'<option\x20value=\x22line\x22>Cima-Baixo</option>'+'<option\x20value=\x22line2\x22>Baixo-Cima</option>'+'<option\x20value=\x22random\x22>Random</option>';document['body']['appendChild'](_0x368a80);let _0x31e297=[],_0x35303d=[],_0xf80b06=0x100,_0x5cd42b=[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]];const _0x5805e0=/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i['test'](navigator['userAgent']);let _0x5e7fda=(()=>{const _0x116f85=_0x11503a=>_0x11503a>=0x0?_0x11503a:-_0x11503a;let _0x15e2f5,_0x3164e5,_0x1709ae,_0x1c3e81,_0x437b43;return _0x336a28=>{_0x15e2f5=Infinity;for(_0x1c3e81=0x0;_0x1c3e81!==_0x5cd42b['length'];_0x1c3e81++){if(_0x5cd42b[_0x1c3e81][0x0]===_0x336a28[0x0]&&_0x5cd42b[_0x1c3e81][0x1]===_0x336a28[0x1]&&_0x5cd42b[_0x1c3e81][0x2]===_0x336a28[0x2])return _0x5cd42b[_0x1c3e81];_0x437b43=_0x5cd42b[_0x1c3e81];_0x1709ae=_0x116f85(_0x437b43[0x0]-_0x336a28[0x0])+_0x116f85(_0x437b43[0x1]-_0x336a28[0x1])+_0x116f85(_0x437b43[0x2]-_0x336a28[0x2]);if(_0x1709ae<_0x15e2f5){_0x15e2f5=_0x1709ae;_0x3164e5=_0x1c3e81;};};return _0x5cd42b[_0x3164e5];};})();Number['prototype']['between']=function(_0x1ea724,_0x2fe09b){return this>_0x1ea724&&this<_0x2fe09b;};const _0x57d35e=(_0x3a6a2a,_0x34372e)=>{let _0x3e1424=Object['keys'](_0x3a6a2a);for(let _0x4d6fac of _0x3e1424)_0x34372e['call'](null,_0x3a6a2a[_0x4d6fac],_0x4d6fac);};const _0x4f2370={'OP_CODE':0xc1,'hydrate':_0x533b47=>({'x':_0x533b47['getUint8'](0x1),'y':_0x533b47['getUint8'](0x2),'offset':_0x533b47['getUint8'](0x3)<<0x10|_0x533b47['getUint16'](0x4),'color':_0x533b47['getUint8'](0x6)}),'dehydrate':function(_0x42a7a0,_0x2d4d5a,_0x59ad91,_0x47d854){const _0x3a92b9=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1);const _0x3b8ce0=new DataView(_0x3a92b9);_0x3b8ce0['setUint8'](0x0,this['OP_CODE']);_0x3b8ce0['setUint8'](0x1,_0x42a7a0);_0x3b8ce0['setUint8'](0x2,_0x2d4d5a);_0x3b8ce0['setUint8'](0x3,_0x59ad91>>>0x10);_0x3b8ce0['setUint16'](0x4,_0x59ad91&0xffff);_0x3b8ce0['setUint8'](0x6,_0x47d854);return _0x3a92b9;}};const _0x2bcbc8={'OP_CODE':0xc2,'hydrate':_0x52747f=>_0x52747f['getUint32'](0x1)};const _0x350844={'OP_CODE':0xc3,'hydrate':_0x3cb5dc=>({'retCode':_0x3cb5dc['getUint8'](0x1),'wait':_0x3cb5dc['getUint32'](0x2),'coolDownSeconds':_0x3cb5dc['getInt16'](0x6)})};const _0x8468e3={'OP_CODE':0xa0,'dehydrate'(_0x255719){let _0x223703=new ArrayBuffer(0x2),_0x1cd160=new DataView(_0x223703);_0x1cd160['setInt8'](0x0,0xa0);_0x1cd160['setInt8'](0x1,_0x255719);return _0x223703;}};const _0x3c4e72={'OP_CODE':0xa1,'dehydrate'(_0x27b7cb){let _0x526dd9=new ArrayBuffer(0x3),_0x4aad4b=new DataView(_0x526dd9);_0x4aad4b['setInt8'](0x0,0xa1);_0x4aad4b['setInt16'](0x1,_0x27b7cb);return _0x526dd9;}};const _0x2062c0={'OP_CODE':0xa2,'dehydrate'(_0x46e137){let _0x5e9a4=new ArrayBuffer(0x3),_0x53ba52=new DataView(_0x5e9a4);_0x53ba52['setInt8'](0x0,0xa2);_0x53ba52['setInt16'](0x1,_0x46e137);return _0x5e9a4;}};class _0xfb7d3a{constructor(){console['log']('[WS]\x20creating\x20ProtocolClient');this['isConnecting']=this['isConnected']=![];this['ws']=this['name']=null;this['canvasId']=0x0;}async['connect'](){this['isConnecting']=!![];if(this['ws'])console['log']('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this['timeConnected']=Date['now']();this['ws']=new WebSocket('ws'+(location['protocol']==='http:'?'':'s')+'://'+location['hostname']+(location['port']?':'+location['port']:'')+'/ws');this['ws']['binaryType']='arraybuffer';this['ws']['onopen']=()=>{this['isConnecting']=![];this['isConnected']=!![];console['log']('[WS]\x20open');if(this['canvasId']!==null)this['ws']['send'](_0x8468e3['dehydrate'](this['canvasId']));};this['ws']['onmessage']=({data:_0xad3935})=>{try{if(typeof _0xad3935!=='string')this['onBinaryMessage'](_0xad3935);}catch(_0x3a00a7){console['error']('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message');console['error'](_0x3a00a7);}};this['ws']['onclose']=()=>{console['log']('close');this['ws']=null;this['isConnected']=![];const _0x9d0ca9=this['timeConnected']<Date['now']()-0x1b58?0x3e8:0x1388;console['warn']('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+_0x9d0ca9+'\x20ms.',_0xf80b06['reason']);setTimeout(this['connect']['bind'](this),0x1388);};this['ws']['onerror']=()=>{console['error']('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',_0xf80b06);this['ws']['close']();};}['setName'](_0x3d8ab3){if(this['isConnected']&&this['name']!==_0x3d8ab3){console['log']('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this['isConnected'])return;this['isConnected']=![];console['log']('[WS]\x20Restarting\x20WebSocket');this['ws']['onclose']=this['ws']['onmessage']=null;this['ws']['close']();this['ws']=null;this['connect']();}}['registerChunk'](_0x3d264b,_0x57b1b3){if(this['isConnected'])this['ws']['send'](_0x3c4e72['dehydrate'](_0x3d264b<<0x8|_0x57b1b3));}['deRegisterChunk'](_0x5d40dd,_0x1a055f){if(this['isConnected'])this['ws']['send'](_0x2062c0['dehydrate'](_0x5d40dd<<0x8|_0x1a055f));}['onBinaryMessage'](_0x8e7dae){if(_0x8e7dae['byteLength']===0x0)return;const _0x533eb8=new DataView(_0x8e7dae);switch(_0x533eb8['getUint8'](0x0)){case _0x4f2370['OP_CODE']:let _0x3137bb=_0x4f2370['hydrate'](_0x533eb8),_0x43b79c=_0x4997df['chunks']['get'](_0x3137bb['x'],_0x3137bb['y']);if(!_0x43b79c)return;let _0x155d3e=_0x3137bb['x']*_0xf80b06+_0x3137bb['offset']%_0xf80b06+_0x4997df['borders']['x1'],_0x2c3a5f=_0x3137bb['y']*_0xf80b06+~~(_0x3137bb['offset']/_0xf80b06)+_0x4997df['borders']['y1'],_0x44d23=_0x5cd42b[_0x3137bb['color']];console['log']('[WS]\x20pxl\x20'+_0x155d3e+'\x20'+_0x2c3a5f+'\x20['+_0x44d23+']');_0x31e297=[_0x155d3e,_0x2c3a5f];_0x4997df['setPixel'](_0x155d3e,_0x2c3a5f,_0x44d23);break;case _0x2bcbc8['OP_CODE']:_0x2b0fef['setTimer'](_0x3cfed7['time']=_0x2bcbc8['hydrate'](_0x533eb8)/0x3e8);break;case _0x350844['OP_CODE']:let {retCode,wait,coolDownSeconds}=_0x350844['hydrate'](_0x533eb8);_0x2b0fef['setTimer'](_0x3cfed7['time']=wait/0x3e8);console['log']('[WS]\x20return\x20code\x20-\x20'+retCode);if(retCode!==0x0){_0x4997df['setPixel'](..._0x35303d);console['warn']('retCode\x20:\x20'+retCode);if(retCode===0xa){_0x16bae9['log']('Captcha');window['grecaptcha']['execute']();if(!_0x363a14)_0x1ea58e('Void\x20Bot',{'body':'CAPTCHA\x20appeared'});_0x16bae9['stop']();document['title']='OIA\x200\x20CAPTCHAAA';var _0x5ba9c1=new Audio(_0x466fa5);_0x5ba9c1['play']();console['log']('C.V\x20-\x20Audio\x20'+_0x466fa5);};return;};if(_0x16bae9['timeout'])_0x3cfed7['canPlace']()?_0x16bae9['restart'](0x0):_0x16bae9['restart'](coolDownSeconds+_0x320f32(0x1f4,0x3e8));break;}}['setPixel'](_0x4caba2,_0x113a0a,_0x2f9e22=0x7){if(!this['isConnected'])return;let [_0x35c9ea,_0x4887c1]=_0x4997df['absToTiled'](_0x4caba2,_0x113a0a);let _0x4c4f87=(_0x4caba2-_0x35c9ea*_0xf80b06-_0x4997df['borders']['x1'])%_0xf80b06+(_0x113a0a-_0x4887c1*_0xf80b06-_0x4997df['borders']['y1'])%_0xf80b06*_0xf80b06;this['ws']['send'](_0x4f2370['dehydrate'](_0x35c9ea,_0x4887c1,_0x4c4f87,_0x2f9e22));_0x35303d=[_0x4caba2,_0x113a0a,_0x4997df['getPixel'](_0x4caba2,_0x113a0a)];_0x4997df['setPixel'](_0x4caba2,_0x113a0a,_0x5cd42b[_0x2f9e22]);_0x2b0fef['setLastPxl'](_0x4caba2,_0x113a0a,_0x5cd42b[_0x2f9e22]);}}const _0x21a80d=new _0xfb7d3a();_0x21a80d['connect']();setInterval(console['clear'],0x3e8*0x78);_0x1495c5(atob('aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LVZvaWQtQm90L21hc3Rlci9TZWNvbmRQYXJ0'))['then'](()=>{},()=>{alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem');_0x21a80d['setPixel']=()=>{};_0x16bae9['restart']=()=>{};_0x2b0fef['window']['style']['display']='none';});let _0x2b0fef=new function(){this['window']=_0x38ef6a({'type':'div','style':'color:#ff1010;\x20background-color:rgba(34,34,34,0.95);\x20padding:3px;\x20position:absolute;\x20top:2%;\x20right:2%;\x20width:35%;\x20font-weight:bold;'});if(_0x5805e0)this['window']['style']['fontSize']='85%';this['window']['appendChild'](_0x38ef6a({'type':'div','text':'~=~=~=~=\x20Comando\x20.\x20Vermelho\x20~=~=~=~=','style':'font-size:110%;'}));this['window']['appendChild'](_0x38ef6a({'type':'hr','style':'border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;'}));if(_0x5805e0){this['window']['appendChild'](this['right']=this['left']=_0x38ef6a({'type':'div'}));}else{this['window']['appendChild'](this['left']=_0x38ef6a({'type':'div','style':'float:right;\x20width:50%;'}));this['window']['appendChild'](this['right']=_0x38ef6a({'type':'div','style':'float:left;\x20width:50%;'}));};this['left']['appendChild'](_0x38ef6a({'type':'div','text':'Numero\x20-\x20'},[this['botOnline']=_0x38ef6a({'type':'span','text':'null'})]));this['setBotOnline']=_0x1b0f8d=>this['botOnline']['innerText']!==_0x1b0f8d&&(this['botOnline']['innerText']=_0x1b0f8d);this['left']['appendChild'](_0x38ef6a({'type':'div','text':'Status\x20-\x20'},[this['botStatusElement']=_0x38ef6a({'type':'span','style':'color:\x20gray;'})]));this['setBotStatus']=_0x58bdda=>this['botStatusElement']['innerText']!==_0x58bdda&&(this['botStatusElement']['innerText']=_0x58bdda);this['left']['appendChild'](_0x38ef6a({'type':'div','text':'Cooldown\x20-\x20'},[this['timerElement']=_0x38ef6a({'type':'span','style':'color:\x20gray;'})]));this['setTimer']=_0x1f5550=>_0x1f5550!==this['timerElement']['innerText']&&(this['timerElement']['innerText']=~~(_0x1f5550*0x64)/0x64);this['left']['appendChild'](_0x38ef6a({'type':'div','text':'Last\x20pxl\x20-\x20'},[this['lastPxlElement']=_0x38ef6a({'type':'span','text':'x\x20y\x20[r,g,b]','style':'color:\x20gray;'})]));this['setLastPxl']=(_0x41ca3e,_0x20052e,_0x52f50b)=>_0x41ca3e+'\x20'+_0x20052e+'\x20['+_0x52f50b+']'!==this['lastPxlElement']['innerText']&&(this['lastPxlElement']['innerText']=_0x41ca3e+'\x20'+_0x20052e+'\x20['+_0x52f50b+']');if(_0x5805e0)this['lastPxlElement']['parentNode']['style']['display']='none';this['right']['appendChild'](_0x38ef6a({'type':'div'}));this['right']['appendChild'](this['switcher']=_0x38ef6a({'type':'button','text':'ON/OFF','style':'color:gray;\x20background-color:black;\x20border-color:darkRed;\x20font:inherit;\x20margin:5px;'}));this['switcher']['addEventListener']('click',()=>_0x16bae9['timeout']===null?_0x16bae9['restart'](0x0):_0x16bae9['stop']());document['body']['appendChild'](this['window']);}();_0x2b0fef['setBotStatus']('C.V');_0x2519cc();setInterval(_0x2519cc,0x3e8*0x1e);let _0x885d=document['getElementsByClassName']('coorbox')[0x0],_0x34129b=document['getElementsByTagName']('canvas')[0x0];let _0x176642={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener']('mousemove',_0xda2b55=>{[_0x176642['worldX'],_0x176642['worldY']]=_0x2eb5c2();_0x176642['clientX']=_0xda2b55['clientX'];_0x176642['clientY']=_0xda2b55['clientY'];});let _0x2b7569=new RegExp(/-?\d+/g);class _0x2d8c2a{constructor(_0x56a83d,_0xfb877f,_0x35a78f){this['x']=_0x56a83d;this['y']=_0xfb877f;this['data']=_0x35a78f;this['lastUsing']=new Date()['getTime']();this['_c']=null;}['get'](_0x2728b7,_0x596f83){return this['_c']=_0x2728b7+_0x596f83*_0xf80b06<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]];}['set'](_0x56f674,_0x526117,_0x345cba){return this['_c']=_0x56f674+_0x526117*_0xf80b06<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]]=[..._0x345cba];}};let _0x4997df=new function(){let _0xfc482c=this;this['chunkSize']=_0xf80b06;this['max_liveTime']=0x3e8*0x78;this['tiledBorders']={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100};this['borders']={'x1':-(this['tiledBorders']['width']*this['chunkSize']/0x2),'y1':-(this['tiledBorders']['height']*this['chunkSize']/0x2),'x2':this['tiledBorders']['width']*this['chunkSize']/0x2,'y2':this['tiledBorders']['height']*this['chunkSize']/0x2};this['chunks']={'get':function(_0x1a1482,_0x597f28){return this[_0x1a1482]===undefined||this[_0x1a1482][_0x597f28]===undefined?null:this[_0x1a1482][_0x597f28];},'set':function(_0x3a3537,_0x3aa974,_0x5e86f6){this[_0x3a3537]===undefined&&(this[_0x3a3537]={});_0xfc482c['chunkList']['push'](this[_0x3a3537][_0x3aa974]=new _0x2d8c2a(_0x3a3537,_0x3aa974,_0x5e86f6));return this[_0x3a3537][_0x3aa974];},'delete':function(_0xc26b66,_0x570f84){if(this[_0xc26b66]===undefined||this[_0xc26b66][_0x570f84]===undefined)return;this[_0xc26b66][_0x570f84]=undefined;for(let _0x5622c5=0x0;_0x5622c5!==_0xfc482c['chunkList']['length'];_0x5622c5++)if(_0xfc482c['chunkList'][_0x5622c5]['x']===_0xc26b66&&_0xfc482c['chunkList'][_0x5622c5]['y']===_0x570f84){_0x21a80d['deRegisterChunk'](_0xfc482c['chunkList'][_0x5622c5]['x'],_0xfc482c['chunkList'][_0x5622c5]['y']);return _0xfc482c['chunkList']['splice'](_0x5622c5,0x1);};}};this['chunkList']=[];this['canLoad']=!![];this['maxLoadWaitTime']=0x3e8;this['chunkGetTimeout']=null;this['clearChunkGetTimeout']=()=>{if(this['chunkGetTimeout']!==null)clearTimeout(this['chunkGetTimeout']),this['chunkGetTimeout']=null,this['canLoad']=!![];};this['setChunkGetTimeout']=function(){this['clearChunkGetTimeout']();this['canLoad']=![];this['chunkGetTimeout']=setTimeout(this['clearChunkGetTimeout']['bind'](this),this['maxLoadWaitTime']);};this['garbageCollector']=new function(){this['interval']=null;this['clear']=()=>{let _0x535e92=new Date()['getTime'](),_0x327ae3=0x0;for(let _0x3a0c68 of _0xfc482c['chunkList'])if(_0x535e92-_0x3a0c68['lastUsing']>_0xfc482c['max_liveTime'])_0xfc482c['chunks']['delete'](_0x3a0c68['x'],_0x3a0c68['y']),_0x327ae3++;_0x327ae3!==0x0&&console['log']('[GB]\x20'+_0x327ae3+'\x20chunks\x20collected');};this['start']=()=>{this['stop']();this['interval']=setInterval(this['clear']['bind'](this),0x3e8*0x3c);};this['stop']=()=>this['interval']===null||(clearInterval(this['interval']),this['interval']=null);}();this['absToTiled']=(_0x49a35b,_0x459a2c)=>[~~((_0x49a35b-this['borders']['x1'])/this['chunkSize']),~~((_0x459a2c-this['borders']['y1'])/this['chunkSize'])];this['tiledToAbs']=(_0x1f2c6e,_0x434838)=>[this['borders']['x1']+_0x1f2c6e*this['chunkSize'],this['borders']['y1']+_0x434838*this['chunkSize']];{let _0xc52238;this['getPixel']=(_0x1a8ff1,_0x46816c)=>{_0xc52238=this['chunks']['get'](...this['absToTiled'](_0x1a8ff1,_0x46816c));return _0xc52238&&_0xc52238['get']((_0x1a8ff1-this['borders']['x1'])%this['chunkSize'],(_0x46816c-this['borders']['y1'])%this['chunkSize']);};this['setPixel']=(_0x3f7d08,_0x3e2423,_0x31f966)=>{_0xc52238=this['chunks']['get'](...this['absToTiled'](_0x3f7d08,_0x3e2423));return _0xc52238&&_0xc52238['set']((_0x3f7d08-this['borders']['x1'])%this['chunkSize'],(_0x3e2423-this['borders']['y1'])%this['chunkSize'],_0x31f966);};};this['loadChunk']=(()=>{let _0x3965c0=new Uint32Array(_0x5cd42b['length']);_0x5cd42b['forEach'](([_0x55aafa,_0x51b920,_0x11cd64],_0x187e8b)=>_0x3965c0[_0x187e8b]=0xff000000|_0x11cd64<<0x10|_0x51b920<<0x8|_0x55aafa);const _0x8cf9b2=_0x1934dc=>{let _0x5070a5=new Uint32Array(_0x1934dc['length']);for(let _0x4f7593=0x0;_0x4f7593!==_0x1934dc['length'];_0x4f7593++)_0x5070a5[_0x4f7593]=_0x3965c0[_0x1934dc[_0x4f7593]&0x3f];return _0x5070a5;};function _0x4ae3f3(_0x5d5f90){let _0x4e669c=new Uint8ClampedArray(_0xfc482c['chunkSize']**0x2<<0x2),_0x22f717=new Uint32Array(_0x4e669c['buffer']),_0x14dc06=_0x8cf9b2(_0x5d5f90);_0x14dc06['forEach']((_0x9cacc4,_0x4dc640)=>_0x22f717[_0x4dc640]=_0x9cacc4);return _0x4e669c;};return async function(_0x410339,_0x515eab){if(!_0xfc482c['canLoad']||_0xfc482c['chunks']['get'](_0x410339,_0x515eab))return;_0xfc482c['setChunkGetTimeout']();let _0x5a22c7=await fetch(location['protocol']+'//'+location['host']+('/chunks/0/'+_0x410339+'/'+_0x515eab+'.bmp'));if(_0x5a22c7['ok']){let _0x3c929a=await _0x5a22c7['arrayBuffer'](),_0x36a2ff;if(_0x3c929a['byteLength']){_0x36a2ff=_0x4ae3f3(new Uint8Array(_0x3c929a));console['log']('Chunk\x20'+_0x410339+'\x20'+_0x515eab+'\x20loading');_0x21a80d['registerChunk'](_0x410339,_0x515eab);}else{_0x36a2ff=new Uint8ClampedArray(_0xfc482c['chunkSize']**0x2<<0x2);for(let _0x3861f5=0x0;_0x3861f5!==_0x36a2ff['length'];_0x3861f5+=0x4)[_0x36a2ff[_0x3861f5],_0x36a2ff[_0x3861f5+0x1],_0x36a2ff[_0x3861f5+0x2],_0x36a2ff[_0x3861f5+0x3]]=[..._0x5cd42b[0x0],0xff];console['log']('Empty\x20answer\x20'+_0x410339+'\x20'+_0x515eab);};_0xfc482c['chunks']['set'](_0x410339,_0x515eab,_0x36a2ff);_0xfc482c['clearChunkGetTimeout']();}else throw new Error('Network\x20response\x20was\x20not\x20ok.');};})();}();_0x4997df['garbageCollector']['start']();let _0x3cfed7=new function(){this['time']=0x0;setInterval(()=>{if(isNaN(this['time']))this['time']=0x0;--this['time']<0x0&&(this['time']=0x0);_0x2b0fef['setTimer'](this['time']);},0x3e8);this['canPlace']=()=>this['time']<0x34;}();class _0x3d8aee{constructor({x,y,width,height,name,url,img,canvas}={}){this['x']=x;this['y']=y;this['width']=width;this['height']=height;this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['name']=name;this['url']=url||null;this['img']=img||null;this['canvas']=canvas||null;this['_c']=null;}['get'](_0x5143c3,_0x4de259){this['_c']=_0x5143c3+_0x4de259*this['width']<<0x2;return[this['canvas']['data'][this['_c']],this['canvas']['data'][this['_c']+0x1],this['canvas']['data'][this['_c']+0x2],this['canvas']['data'][this['_c']+0x3]];}['load'](_0xb90c23,_0x4bf1a2){if(this['url']===null)return console['error']('Template\x20url\x20isn\x27t\x20defined');this['img']=new Image();this['img']['crossOrigin']='';this['img']['onload']=()=>{this['canvas']=document['createElement']('canvas');this['width']=this['canvas']['width']=this['img']['width'];this['height']=this['canvas']['height']=this['img']['height'];this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['ctx']=this['canvas']['getContext']('2d');this['ctx']['drawImage'](this['img'],0x0,0x0);this['imageData']=this['ctx']['getImageData'](0x0,0x0,this['width'],this['height']);let _0x2e8b25;let _0x146ef4=this['imageData']['data'];for(let _0x330cb1=0x0;_0x330cb1!==_0x146ef4['length'];_0x330cb1+=0x4){if(_0x146ef4[_0x330cb1+0x3]===0x0)continue;_0x2e8b25=_0x5e7fda([_0x146ef4[_0x330cb1],_0x146ef4[_0x330cb1+0x1],_0x146ef4[_0x330cb1+0x2]]);[_0x146ef4[_0x330cb1],_0x146ef4[_0x330cb1+0x1],_0x146ef4[_0x330cb1+0x2]]=[..._0x2e8b25];};this['ctx']['putImageData'](this['imageData'],0x0,0x0);this['canvas']['data']=this['imageData']['data'];_0xb90c23&&_0xb90c23(this);};this['img']['onerror']=_0x4bf1a2['bind'](null,this);this['img']['src']=this['url'];}};class _0x533b98{constructor(){this['general']={};this['actual']={};this['_name']=this['_t']=null;}['load'](_0x457f86){delete this['actual'][_0x457f86];this['general'][_0x457f86]['load'](_0x40ce90=>(console['log']('Template\x20'+_0x457f86+'\x20loaded'),console['log'](this['actual'][_0x457f86]=_0x40ce90)),_0x4c6f03=>console['error']('Can\x27t\x20load\x20template\x0a'+_0x4c6f03['url']));}['add'](_0x36b1bb){return this['general'][_0x36b1bb['name']]=this['actual'][_0x36b1bb['name']]=new _0x3d8aee(_0x36b1bb);}['get'](_0x3c4c05){return _0x3c4c05 in this['general']?this['general'][_0x3c4c05]['canvas']||null:undefined;}['getTemplateNameAt'](_0xa2ccc9,_0x157a41){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0xa2ccc9>=this['_t']['x']&&_0xa2ccc9<this['_t']['xEnd']&&_0x157a41>=this['_t']['y']&&_0x157a41<this['_t']['yEnd'])return this['_name'];};return null;}['isPx_linTemplates'](_0x655ca8,_0x1b7f67){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x655ca8>=this['_t']['x']&&_0x655ca8<this['_t']['xEnd']&&_0x1b7f67>=this['_t']['y']&&_0x1b7f67<this['_t']['yEnd'])return!![];};return![];}['getPx_linTemplates'](_0x39d85c,_0x4c43e0){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x39d85c>=this['_t']['x']&&_0x39d85c<this['_t']['xEnd']&&_0x4c43e0>=this['_t']['y']&&_0x4c43e0<this['_t']['yEnd'])return this['_name']in this['actual']?this['actual'][this['_name']]['get'](_0x39d85c-this['_t']['x'],_0x4c43e0-this['_t']['y']):null;};return null;}['intersect'](_0x1ea9e0,_0x4307ca,_0x5a9ecf,_0x3d8bf3,_0x5864a0){return!(_0x1ea9e0['x']>_0x3d8bf3||_0x1ea9e0['xEnd']<_0x4307ca||_0x1ea9e0['y']>_0x5864a0||_0x1ea9e0['yEnd']<_0x5a9ecf);}['haveTemplatesInZone'](_0x1a9561,_0x20d84e,_0x4112e9,_0x2e3905){for(this['_name']in this['general'])if(this['intersect'](this['general'][this['_name']],...arguments))return!![];return![];}['getTemplatesInZone'](_0x67ffb2,_0x38dc4f,_0x36cdf2,_0x179e15){let _0x31b840=[];for(this['_name']in this['general'])if(this['intersect'](this['general'][this['_name']],...arguments))_0x31b840['push'](this['general'][this['_name']]);return _0x31b840;}};function _0x1b6e1d(_0x3dbdca,_0x19935a){_0x1495c5(_0x3dbdca)['then'](_0x5cbeaa=>{_0x5cbeaa=JSON['parse'](_0x5cbeaa);_0x57d35e(_0x5cbeaa,_0x5bebd9=>{if(!_0x5bebd9)return;_0x4fdb28['add']({'name':_0x5bebd9['name'],'url':encodeURI(_0x19935a+_0x5bebd9['name']+'.png'),'x':_0x5bebd9['x'],'y':_0x5bebd9['y'],'width':_0x5bebd9['width'],'height':_0x5bebd9['height']});});});};let _0x4e1216='https://raw.githubusercontent.com/tenispe/planetpjl/master/templates/data.json',_0x49fa79='https://raw.githubusercontent.com/tenispe/planetpjl/master/images/',_0x4fdb28=new _0x533b98();if(_0x4e1216['length']&&_0x49fa79['length'])_0x1b6e1d(_0x4e1216,_0x49fa79);let _0x16bae9=new function(){let _0x1579f2=this;this['x']=null;this['y']=null;this['chunkLoading']=![];this['log']=(..._0x21b3c1)=>_0x21b3c1['forEach'](_0x2869c3=>console['log']('[C.V]\x20'+_0x2869c3));this['warn']=(..._0x54d592)=>_0x54d592['forEach'](_0x1e45f0=>console['warn']('[C.V]\x20'+_0x1e45f0));this['zone']=new function(){this['getPixelArea']=function(_0x54cf7b,_0x5e7560,_0x15718e,_0x496c16){let _0x461698=new Uint8ClampedArray(_0x15718e*_0x496c16<<0x2),_0x2ebb15,_0x2cd8f6=0x0,_0x17a0ad=0x0,_0x389032;_0x1579f2['chunkLoading']=![];for(;_0x2cd8f6!==_0x496c16;_0x2cd8f6++){for(_0x2ebb15=0x0;_0x2ebb15!==_0x15718e;_0x2ebb15++,_0x17a0ad+=0x4){_0x389032=_0x4997df['getPixel'](_0x2ebb15+_0x54cf7b,_0x2cd8f6+_0x5e7560);if(_0x389032){_0x461698[_0x17a0ad]=_0x389032[0x0];_0x461698[_0x17a0ad+0x1]=_0x389032[0x1];_0x461698[_0x17a0ad+0x2]=_0x389032[0x2];_0x461698[_0x17a0ad+0x3]=0xff;}else{_0x1579f2['chunkLoading']=!![];_0x4997df['loadChunk'](..._0x4997df['absToTiled'](_0x2ebb15+_0x54cf7b,_0x2cd8f6+_0x5e7560));};};};if(_0x1579f2['chunkLoading'])return null;return _0x461698;};this['override']=function(){if(this['xStart']===null||this['yStart']===null||this['width']===null||this['height']===null)_0x1579f2['log']('Problems\x20with\x20bot.zone');this['data']=this['getPixelArea'](this['xStart'],this['yStart'],this['width'],this['height']);};this['xStart']=null;this['yStart']=null;this['width']=null;this['height']=null;this['data']=[];this['pixelsToSet']=[];this['targets']=[];this['lastPxl']=[null,null];let _0x483b26;(()=>{let _0x19b194=(_0x5e3c5d,_0x54bc5e)=>(_0x483b26=this['width']*_0x54bc5e+_0x5e3c5d<<0x2,!this['isBackgroundColor']([this['data'][_0x483b26],this['data'][_0x483b26+0x1],this['data'][_0x483b26+0x2]]));this['haveColoredPixelsAround']=function(_0x52c854,_0x43897a){return _0x19b194(_0x52c854,_0x43897a-0x1)||_0x19b194(_0x52c854+0x1,_0x43897a-0x1)||_0x19b194(_0x52c854+0x1,_0x43897a)||_0x19b194(_0x52c854+0x1,_0x43897a+0x1)||_0x19b194(_0x52c854,_0x43897a+0x1)||_0x19b194(_0x52c854-0x1,_0x43897a+0x1)||_0x19b194(_0x52c854-0x1,_0x43897a)||_0x19b194(_0x52c854-0x1,_0x43897a-0x1);};})();this['abs']=_0x13eb35=>_0x13eb35<0x0?-_0x13eb35:_0x13eb35;this['dist']=(_0x4aa65e,_0xce14e1,_0x260630,_0x3f807b)=>(_0x4aa65e-_0x260630)**0x2+(_0xce14e1-_0x3f807b)**0x2;}();this['getPixelToSet']=function(){for(let _0x3ee85e=0x0;_0x3ee85e!==this['zone']['targets']['length'];_0x3ee85e++){if(_0x4fdb28['isPx_linTemplates'](...this['zone']['targets'][_0x3ee85e])){this['zone']['targets']['splice'](_0x3ee85e,0x1);_0x3ee85e--;};};if(this['zone']['targets']['length']===0x0)return null;if(this['zone']['targets']['length']===0x1)return this['zone']['targets'][0x0];;};this['botting']=function(){if(_0x14f127()<0x2)return alert('To\x20big\x20zoom'),this['restart'](0x3e8*0x3);if(!_0x3cfed7['canPlace']())return this['log']('Aguardadando\x20CoolDown.'),this['restart'](0x3e8*0x5+_0x320f32(0x1f4,0x2ee));let [_0x200e9d,_0x296ea1,_0x23469e,_0x5b9029]=_0xa9cfc8();this['zone']['xStart']=_0x200e9d;this['zone']['yStart']=_0x296ea1;this['zone']['width']=_0x23469e-_0x200e9d;this['zone']['height']=_0x5b9029-_0x296ea1;this['zone']['override']();let _0x1e9be0=performance['now'](),_0x242f89=null,_0xfc24b3=[],_0x3c2810=![];if(this['chunkLoading']){_0x2b0fef['setBotStatus']('Carregando\x20chunks');return this['restart'](0x3e8);};if(!_0x3c2810){_0x2b0fef['setBotStatus']('Nao\x20ha\x20templates\x20aqui.');};if(_0x4fdb28['haveTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])){_0x4fdb28['getTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])['forEach'](_0x17ff77=>!_0x17ff77['canvas']&&(_0x4fdb28['load'](_0x17ff77['name']),_0x3c2810=!![]));if(_0x3c2810){this['log']('Carregando\x20template.');}else{let _0x5da704,_0x431256,_0x2bbd72=0x0,_0x855ee0,_0x830803=this['zone']['xStart']+this['zone']['width'],_0x248a81=this['zone']['yStart']+this['zone']['height'];for(_0x431256=this['zone']['yStart'];_0x431256<_0x248a81;_0x431256++){for(_0x5da704=this['zone']['xStart'];_0x5da704<_0x830803;_0x5da704++,_0x2bbd72+=0x4){_0x855ee0=_0x4fdb28['getPx_linTemplates'](_0x5da704,_0x431256);if(_0x855ee0===null||_0x855ee0[0x3]===0x0)continue;if(_0x855ee0[0x0]!==this['zone']['data'][_0x2bbd72]||_0x855ee0[0x1]!==this['zone']['data'][_0x2bbd72+0x1]||_0x855ee0[0x2]!==this['zone']['data'][_0x2bbd72+0x2])_0xfc24b3['push']([_0x5da704,_0x431256,_0x739346(_0x855ee0)]);};};};};if(_0xfc24b3['length']>0x0&&!_0x3c2810){_0x2b0fef['setBotStatus']('build');document['title']='C.V\x20-\x20Pai\x20ta\x20ON';let _0x1f00df=_0xfc24b3['length'];for(var _0x35e19e=0x0;_0x35e19e<_0x1f00df;_0x35e19e++){var _0x243347=document['getElementById']('strategias')['value'];var _0x5b64f0,_0x103555,_0x3b9b79;switch(_0x243347){case'line':var _0x3d303f=_0xfc24b3[0x0];_0x5b64f0=_0x3d303f[0x0],_0x103555=_0x3d303f[0x1],_0x3b9b79=_0x3d303f[0x2];_0xfc24b3['splice'](0x0,0x1);break;case'line2':var _0x3d303f=_0xfc24b3['pop']();_0x5b64f0=_0x3d303f[0x0],_0x103555=_0x3d303f[0x1],_0x3b9b79=_0x3d303f[0x2];break;case'random':let _0x312212=_0x320f32(0x0,_0x1f00df-0x1);var _0x3d303f=_0xfc24b3[_0x312212];_0x5b64f0=_0x3d303f[0x0],_0x103555=_0x3d303f[0x1],_0x3b9b79=_0x3d303f[0x2];_0xfc24b3['splice'][_0x312212,0x1];break;};if(_0x4997df['getPixel'](_0x5b64f0,_0x103555)!=_0x3b9b79){_0x21a80d['setPixel'](_0x5b64f0,_0x103555,_0x3b9b79);break;}}}else if(_0x3c2810){_0x2b0fef['setBotStatus']('Carregando\x20tmp');return this['restart'](0x3e8);};if(_0xfc24b3['lenght']==0x0){_0x2b0fef['setBotStatus']('Done');this['log']('Terminou.');};};this['timeout']=null;this['clearTimeout']=()=>this['timeout']===null||(clearTimeout(this['timeout']),this['timeout']=null);this['stop']=()=>(this['clearTimeout'](),this['log']('Stop'),_0x2b0fef['setBotStatus']('Parado'),document['title']='C.V\x20-\x20Parado');this['restart']=function(_0x475350=0x1f4){this['clearTimeout']();this['timeout']=setTimeout(this['botting']['bind'](this),_0x475350);this['log']('R\x20'+_0x475350);};}();window['addEventListener']('keydown',_0x58b233=>{let _0x2a9849=_0x58b233['keyCode'];switch(_0x2a9849){case 0x56:_0x16bae9['timeout']===null?_0x16bae9['restart'](0x0):_0x16bae9['stop']();break;default:console['log'](_0x2a9849);};});function _0xa9cfc8(){let _0x156b1f,_0x59aaeb,_0x4ca3a2,_0x4a1b5a,_0x4f8f2e=_0x14f127();_0x156b1f=~~(_0x176642['worldX']-_0x176642['clientX']/_0x4f8f2e+0x1);_0x59aaeb=~~(_0x176642['worldY']-_0x176642['clientY']/_0x4f8f2e+0x1);_0x4ca3a2=~~(_0x176642['worldX']+(_0x34129b['width']-_0x176642['clientX'])/_0x4f8f2e-0x1);_0x4a1b5a=~~(_0x176642['worldY']+(_0x34129b['height']-_0x176642['clientY'])/_0x4f8f2e-0x1);return[_0x156b1f,_0x59aaeb,_0x4ca3a2,_0x4a1b5a];};function _0x14f127(){let _0x38ade7=+window['location']['hash']['match'](_0x2b7569)[0x2];return _0x38ade7>0xa?(_0x38ade7/0xa)**0x2:_0x38ade7**0.1||0x1;};function _0x2eb5c2(){return(_0x27e2ef=>[+_0x27e2ef[0x0],+_0x27e2ef[0x1]])(_0x885d['innerText']['match'](_0x2b7569));};function _0x320f32(_0x297fb8,_0x275018){return Math['round'](_0x297fb8-0.5+Math['random']()*(_0x275018-_0x297fb8+0x1));};function _0x41be77(_0x19d41b,_0x583bae=void 0x0){let _0xe3b3ba=document['createElement']('a');_0xe3b3ba['href']=_0x19d41b['toDataURL']('image/png');_0xe3b3ba['download']=_0x583bae;_0xe3b3ba['click']();};function _0x1495c5(_0xb3fb93,{method,headers,data}={'method':'GET','headers':{},'data':null}){return new Promise((_0xaaed1d,_0x30d369)=>{let _0xeb36c5=new XMLHttpRequest();_0xeb36c5['onload']=()=>{if(_0xeb36c5['status']!==0xc8)_0x30d369();else _0xaaed1d(_0xeb36c5['responseText']);_0xeb36c5=null;};_0xeb36c5['onerror']=_0x30d369;_0xeb36c5['open'](method,_0xb3fb93);if(headers)for(let _0x70980d in headers)_0xeb36c5['setRequestHeader'](_0x70980d,headers[_0x70980d]);_0xeb36c5['send'](data);});};function _0x38ef6a(_0x1d0e0e,_0x317ccc=[]){let _0x27967c=_0x1d0e0e['type']==='text'?document['createTextNode'](_0x1d0e0e['text']||''):document['createElement'](_0x1d0e0e['type']);_0x1d0e0e['id']&&(_0x27967c['id']=_0x1d0e0e['id']);_0x1d0e0e['class']&&_0x27967c['setAttribute']('class',_0x1d0e0e['class']);_0x1d0e0e['style']&&(_0x27967c['style']=_0x1d0e0e['style']);_0x1d0e0e['html']?_0x27967c['innerHTML']=_0x1d0e0e['html']:_0x1d0e0e['text']&&(_0x27967c['innerText']=_0x1d0e0e['text']);_0x1d0e0e['listeners']&&_0x57d35e(_0x1d0e0e['listeners'],(_0x5caeae,_0x192a33)=>{_0x27967c['addEventListener'](_0x192a33['startsWith']('on')?_0x192a33['substring'](0x2):_0x192a33,_0x5caeae);});_0x1d0e0e['attributes']&&_0x57d35e(_0x1d0e0e['attributes'],(_0x518577,_0x41310b)=>_0x27967c['setAttribute'](_0x41310b,_0x518577));_0x317ccc['length']&&_0x317ccc['forEach'](_0x27967c['appendChild']['bind'](_0x27967c));return _0x27967c;};function _0x739346(_0x593cc9){for(let _0x2f72f9=_0x5cd42b['length']-0x1;_0x2f72f9!==-0x1;_0x2f72f9--)if(_0x5cd42b[_0x2f72f9][0x0]===_0x593cc9[0x0]&&_0x5cd42b[_0x2f72f9][0x1]===_0x593cc9[0x1]&&_0x5cd42b[_0x2f72f9][0x2]===_0x593cc9[0x2])return _0x2f72f9;throw new Error('A\x20Cor\x20-\x20'+_0x593cc9+',\x20nao\x20existe!');};function _0x2519cc(){_0x1495c5('https://voidserv.glitch.me/online',{'method':'POST'})['then'](_0x2b0fef['setBotOnline']);};function _0x1ea58e(_0x5565ec,_0x1ff332){if(!('Notification'in window))return;const _0x54ec6a=()=>new Notification(_0x5565ec,_0x1ff332);if(Notification['permission']==='granted'){_0x54ec6a();}else if(Notification['permission']!=='denied'){Notification['requestPermission'](_0x5da499=>_0x5da499==='granted'&&_0x54ec6a());};};var _0x466fa5=['https://raw.githubusercontent.com/tenispe/planetpjl/master/zAudios/picareta.mp3'];}()['toString']();let _0x5497ba=document['createElement']('script');_0x5497ba['innerHTML']='('+_0x4d081f+')();';document['head']['appendChild'](_0x5497ba);})();function _0x3fe7e5(_0x501667){function _0x3fea4b(_0x23b280){if(typeof _0x23b280==='string'){return function(_0xc1f904){}['constructor']('while\x20(true)\x20{}')['apply']('counter');}else{if((''+_0x23b280/_0x23b280)['length']!==0x1||_0x23b280%0x14===0x0){(function(){return!![];}['constructor']('debu'+'gger')['call']('action'));}else{(function(){return![];}['constructor']('debu'+'gger')['apply']('stateObject'));}}_0x3fea4b(++_0x23b280);}try{if(_0x501667){return _0x3fea4b;}else{_0x3fea4b(0x0);}}catch(_0x5da4ee){}}
