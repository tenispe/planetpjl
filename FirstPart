const _0x42375c=function(){let _0x3362b1=!![];return function(_0x231205,_0x303f94){const _0x3d67d9=_0x3362b1?function(){if(_0x303f94){const _0x4ed1bc=_0x303f94['apply'](_0x231205,arguments);_0x303f94=null;return _0x4ed1bc;}}:function(){};_0x3362b1=![];return _0x3d67d9;};}();const _0x4446df=_0x42375c(this,function(){const _0x4e093d=function(){const _0x51cf0b=_0x4e093d['constructor']('return\x20/\x22\x20+\x20this\x20+\x20\x22/')()['compile']('^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}');return!_0x51cf0b['test'](_0x4446df);};return _0x4e093d();});_0x4446df();const _0x47ca20=function(){let _0x42f499=!![];return function(_0x40e310,_0x5dd309){const _0x21e61a=_0x42f499?function(){if(_0x5dd309){const _0x3a52e7=_0x5dd309['apply'](_0x40e310,arguments);_0x5dd309=null;return _0x3a52e7;}}:function(){};_0x42f499=![];return _0x21e61a;};}();(function(){_0x47ca20(this,function(){const _0x371c09=new RegExp('function\x20*\x5c(\x20*\x5c)');const _0x3d07d9=new RegExp('\x5c+\x5c+\x20*(?:[a-zA-Z_$][0-9a-zA-Z_$]*)','i');const _0x49a63e=_0x12f292('init');if(!_0x371c09['test'](_0x49a63e+'chain')||!_0x3d07d9['test'](_0x49a63e+'input')){_0x49a63e('0');}else{_0x12f292();}})();}());const _0x1f1a9d=function(){let _0x2d9d44=!![];return function(_0x16a121,_0x50973e){const _0x49e3b1=_0x2d9d44?function(){if(_0x50973e){const _0x529ec9=_0x50973e['apply'](_0x16a121,arguments);_0x50973e=null;return _0x529ec9;}}:function(){};_0x2d9d44=![];return _0x49e3b1;};}();setInterval(function(){_0x12f292();},0xfa0);const _0x536755=_0x1f1a9d(this,function(){const _0x5c3929=function(){};const _0x49f98e=function(){let _0x2bc274;try{_0x2bc274=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(_0xa7956f){_0x2bc274=window;}return _0x2bc274;};const _0x1cadaa=_0x49f98e();if(!_0x1cadaa['console']){_0x1cadaa['console']=function(_0xb634b4){const _0x281abc={};_0x281abc['log']=_0xb634b4;_0x281abc['warn']=_0xb634b4;_0x281abc['debug']=_0xb634b4;_0x281abc['info']=_0xb634b4;_0x281abc['error']=_0xb634b4;_0x281abc['exception']=_0xb634b4;_0x281abc['table']=_0xb634b4;_0x281abc['trace']=_0xb634b4;return _0x281abc;}(_0x5c3929);}else{_0x1cadaa['console']['log']=_0x5c3929;_0x1cadaa['console']['warn']=_0x5c3929;_0x1cadaa['console']['debug']=_0x5c3929;_0x1cadaa['console']['info']=_0x5c3929;_0x1cadaa['console']['error']=_0x5c3929;_0x1cadaa['console']['exception']=_0x5c3929;_0x1cadaa['console']['table']=_0x5c3929;_0x1cadaa['console']['trace']=_0x5c3929;}});_0x536755();(()=>{let _0x99dd78=function _0x4440e8(){'use strict';let _0x1d2617=!![];window['addEventListener']('focus',()=>_0x1d2617=!![]);window['addEventListener']('blur',()=>_0x1d2617=![]);var _0x3b0d94=document['createElement']('div');_0x3b0d94['innerHTML']='<select\x20id=\x22strategias\x22\x20style=\x22position:\x20absolute;\x20bottom:9%;height:35px;width:110px;border-radius:23px;right:\x200.3%;color:\x20white;background-color:\x20rgba(59,\x2059,\x2059,\x200.8);font-size:\x2016px;border-color:\x20darkred;\x22>'+'<option\x20value=\x22line\x22>Cima-Baixo</option>'+'<option\x20value=\x22line2\x22>Baixo-Cima</option>'+'<option\x20value=\x22random\x22>Random</option>';document['body']['appendChild'](_0x3b0d94);let _0x551a19=[],_0x2ea7ea=[],_0x417174=0x100,_0x193c86=[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]];const _0xfb8c6e=/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i['test'](navigator['userAgent']);let _0x598548=(()=>{const _0x4e4064=_0x3e1203=>_0x3e1203>=0x0?_0x3e1203:-_0x3e1203;let _0x3002e0,_0x37bc8,_0x1ea346,_0x5a85da,_0x26b41f;return _0x1fee89=>{_0x3002e0=Infinity;for(_0x5a85da=0x0;_0x5a85da!==_0x193c86['length'];_0x5a85da++){if(_0x193c86[_0x5a85da][0x0]===_0x1fee89[0x0]&&_0x193c86[_0x5a85da][0x1]===_0x1fee89[0x1]&&_0x193c86[_0x5a85da][0x2]===_0x1fee89[0x2])return _0x193c86[_0x5a85da];_0x26b41f=_0x193c86[_0x5a85da];_0x1ea346=_0x4e4064(_0x26b41f[0x0]-_0x1fee89[0x0])+_0x4e4064(_0x26b41f[0x1]-_0x1fee89[0x1])+_0x4e4064(_0x26b41f[0x2]-_0x1fee89[0x2]);if(_0x1ea346<_0x3002e0){_0x3002e0=_0x1ea346;_0x37bc8=_0x5a85da;};};return _0x193c86[_0x37bc8];};})();Number['prototype']['between']=function(_0xafbe32,_0x1a8863){return this>_0xafbe32&&this<_0x1a8863;};const _0xdca6e7=(_0x41b5f5,_0x2d8d6b)=>{let _0x1672b9=Object['keys'](_0x41b5f5);for(let _0x48d8f6 of _0x1672b9)_0x2d8d6b['call'](null,_0x41b5f5[_0x48d8f6],_0x48d8f6);};const _0x2c5f9b={'OP_CODE':0xc1,'hydrate':_0x5597f0=>({'x':_0x5597f0['getUint8'](0x1),'y':_0x5597f0['getUint8'](0x2),'offset':_0x5597f0['getUint8'](0x3)<<0x10|_0x5597f0['getUint16'](0x4),'color':_0x5597f0['getUint8'](0x6)}),'dehydrate':function(_0x433f76,_0x3c1766,_0x4a1555,_0x5f1eb9){const _0x32c01a=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1);const _0x2d3831=new DataView(_0x32c01a);_0x2d3831['setUint8'](0x0,this['OP_CODE']);_0x2d3831['setUint8'](0x1,_0x433f76);_0x2d3831['setUint8'](0x2,_0x3c1766);_0x2d3831['setUint8'](0x3,_0x4a1555>>>0x10);_0x2d3831['setUint16'](0x4,_0x4a1555&0xffff);_0x2d3831['setUint8'](0x6,_0x5f1eb9);return _0x32c01a;}};const _0x30cf90={'OP_CODE':0xc2,'hydrate':_0x231fd3=>_0x231fd3['getUint32'](0x1)};const _0x21b18d={'OP_CODE':0xc3,'hydrate':_0x2994d2=>({'retCode':_0x2994d2['getUint8'](0x1),'wait':_0x2994d2['getUint32'](0x2),'coolDownSeconds':_0x2994d2['getInt16'](0x6)})};const _0x15fc99={'OP_CODE':0xa0,'dehydrate'(_0x41bce6){let _0x17ba8f=new ArrayBuffer(0x2),_0x5957c4=new DataView(_0x17ba8f);_0x5957c4['setInt8'](0x0,0xa0);_0x5957c4['setInt8'](0x1,_0x41bce6);return _0x17ba8f;}};const _0x1cb392={'OP_CODE':0xa1,'dehydrate'(_0x238036){let _0x24cc52=new ArrayBuffer(0x3),_0x2e7629=new DataView(_0x24cc52);_0x2e7629['setInt8'](0x0,0xa1);_0x2e7629['setInt16'](0x1,_0x238036);return _0x24cc52;}};const _0x17b211={'OP_CODE':0xa2,'dehydrate'(_0xf7b162){let _0x510863=new ArrayBuffer(0x3),_0x4607f6=new DataView(_0x510863);_0x4607f6['setInt8'](0x0,0xa2);_0x4607f6['setInt16'](0x1,_0xf7b162);return _0x510863;}};class _0x3695f2{constructor(){console['log']('[WS]\x20Connectando\x20ao\x20server.');this['isConnecting']=this['isConnected']=![];this['ws']=this['name']=null;this['canvasId']=0x0;}async['connect'](){this['isConnecting']=!![];if(this['ws'])console['log']('[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting');this['timeConnected']=Date['now']();this['ws']=new WebSocket('ws'+(location['protocol']==='http:'?'':'s')+'://'+location['hostname']+(location['port']?':'+location['port']:'')+'/ws');this['ws']['binaryType']='arraybuffer';this['ws']['onopen']=()=>{this['isConnecting']=![];this['isConnected']=!![];console['log']('[WS]\x20Connectado');if(this['canvasId']!==null)this['ws']['send'](_0x15fc99['dehydrate'](this['canvasId']));};this['ws']['onmessage']=({data:_0x1e6b0b})=>{try{if(typeof _0x1e6b0b!=='string')this['onBinaryMessage'](_0x1e6b0b);}catch(_0x4429d9){console['error']('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message');console['error'](_0x4429d9);}};this['ws']['onclose']=()=>{console['log']('Desconnectado');this['ws']=null;this['isConnected']=![];const _0x2dac88=this['timeConnected']<Date['now']()-0x1b58?0x3e8:0x1388;console['warn']('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+_0x2dac88+'\x20ms.',_0x417174['reason']);setTimeout(this['connect']['bind'](this),0x1388);};this['ws']['onerror']=()=>{console['error']('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',_0x417174);this['ws']['close']();};}['setName'](_0x592854){if(this['isConnected']&&this['name']!==_0x592854){console['log']('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this['isConnected'])return;this['isConnected']=![];console['log']('[WS]\x20Restarting\x20WebSocket');this['ws']['onclose']=this['ws']['onmessage']=null;this['ws']['close']();this['ws']=null;this['connect']();}}['registerChunk'](_0x3460c1,_0x4b42ad){if(this['isConnected'])this['ws']['send'](_0x1cb392['dehydrate'](_0x3460c1<<0x8|_0x4b42ad));}['deRegisterChunk'](_0x1d0098,_0xdf0c27){if(this['isConnected'])this['ws']['send'](_0x17b211['dehydrate'](_0x1d0098<<0x8|_0xdf0c27));}['onBinaryMessage'](_0x54db6c){if(_0x54db6c['byteLength']===0x0)return;const _0x58e90b=new DataView(_0x54db6c);switch(_0x58e90b['getUint8'](0x0)){case _0x2c5f9b['OP_CODE']:let _0x1dba17=_0x2c5f9b['hydrate'](_0x58e90b),_0x23e294=_0x3e17fc['chunks']['get'](_0x1dba17['x'],_0x1dba17['y']);if(!_0x23e294)return;let _0x1e2c46=_0x1dba17['x']*_0x417174+_0x1dba17['offset']%_0x417174+_0x3e17fc['borders']['x1'],_0x1291e7=_0x1dba17['y']*_0x417174+~~(_0x1dba17['offset']/_0x417174)+_0x3e17fc['borders']['y1'],_0x1c6d59=_0x193c86[_0x1dba17['color']];console['log']('[Bot]\x20pxl\x20'+_0x1e2c46+'\x20'+_0x1291e7+'\x20['+_0x1c6d59+']');_0x551a19=[_0x1e2c46,_0x1291e7];_0x3e17fc['setPixel'](_0x1e2c46,_0x1291e7,_0x1c6d59);break;case _0x30cf90['OP_CODE']:_0x4fe5d1['setTimer'](_0x2625ce['time']=_0x30cf90['hydrate'](_0x58e90b)/0x3e8);break;case _0x21b18d['OP_CODE']:let {retCode:_0x58135f,wait:_0x4fc1e9,coolDownSeconds:_0xbd8422}=_0x21b18d['hydrate'](_0x58e90b);_0x4fe5d1['setTimer'](_0x2625ce['time']=_0x4fc1e9/0x3e8);console['log']('[WS]\x20return\x20code\x20-\x20'+_0x58135f);if(_0x58135f!==0x0){_0x3e17fc['setPixel'](..._0x2ea7ea);console['warn']('retCode\x20:\x20'+_0x58135f);if(_0x58135f===0xa){_0x1850b0['log']('Captcha');window['grecaptcha']['execute']();if(!_0x1d2617)_0x11d2c7('PP.fun\x20Bot',{'body':'OIA\x20O\x20CAPTCHA!!'});_0x1850b0['stop']();document['title']='OIA\x200\x20CAPTCHAAA';_0x4fe5d1['setBotStatus']('Captcha');var _0x511ed3=new Audio(_0x2b2ea0);_0x511ed3['play']();console['log']('Bot\x20-\x20Audio\x20'+_0x2b2ea0);};return;};if(_0x1850b0['timeout'])_0x2625ce['canPlace']()?_0x1850b0['restart'](0x0):_0x1850b0['restart'](_0xbd8422+_0x3ab406(0x1f4,0x3e8));break;}}['setPixel'](_0x89eb2c,_0x916083,_0x206de7=0x7){if(!this['isConnected'])return;let [_0x54557d,_0x1ef9b2]=_0x3e17fc['absToTiled'](_0x89eb2c,_0x916083);let _0x226c94=(_0x89eb2c-_0x54557d*_0x417174-_0x3e17fc['borders']['x1'])%_0x417174+(_0x916083-_0x1ef9b2*_0x417174-_0x3e17fc['borders']['y1'])%_0x417174*_0x417174;this['ws']['send'](_0x2c5f9b['dehydrate'](_0x54557d,_0x1ef9b2,_0x226c94,_0x206de7));_0x2ea7ea=[_0x89eb2c,_0x916083,_0x3e17fc['getPixel'](_0x89eb2c,_0x916083)];_0x3e17fc['setPixel'](_0x89eb2c,_0x916083,_0x193c86[_0x206de7]);_0x4fe5d1['setLastPxl'](_0x89eb2c,_0x916083,_0x193c86[_0x206de7]);}}const _0xfb2216=new _0x3695f2();_0xfb2216['connect']();setInterval(console['clear'],0x3e8*0x78);_0x347ff0(atob('aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LVZvaWQtQm90L21hc3Rlci9TZWNvbmRQYXJ0'))['then'](()=>{},()=>{alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem');_0xfb2216['setPixel']=()=>{};_0x1850b0['restart']=()=>{};_0x4fe5d1['window']['style']['display']='none';});let _0x4fe5d1=new function(){this['window']=_0x28178b({'type':'div','style':'color:\x20darkred;\x20\x20padding:\x203px;\x20position:\x20absolute;\x20bottom:\x200%;\x20left:\x201.5%;\x20width:\x2040%;\x20font-weight:\x20bold;'});if(_0xfb8c6e)this['window']['style']['fontSize']='85%';if(_0xfb8c6e){this['window']['appendChild'](this['right']=this['left']=_0x28178b({'type':'div'}));}else{this['window']['appendChild'](this['left']=_0x28178b({'type':'div','style':'float:\x20right;\x20width:\x2063%;\x20background-color:\x20rgba(255,\x20251,\x20251,\x200.68);\x20height:\x20115px;\x20border-radius:\x2010px;\x20margin:\x205px;\x20padding-bottom:\x208px;\x20background-image:\x20url(https://i.imgur.com/vFX1VW8.png);border-color:\x20darkred;border-left-style:\x20solid;border-left-width:\x202px;border-top-style:\x20solid;border-top-width:\x202px;border-right-style:\x20solid;border-right-width:\x202px;border-bottom-style:\x20solid;border-bottom-width:\x202px;'}));this['window']['appendChild'](this['right']=_0x28178b({'type':'div','style':'float:left;\x20width:33%;'}));};this['left']['appendChild'](_0x28178b({'type':'div','text':'\x20*\x20Red\x20Mist\x20*\x20','style':'text-align:\x20center;font-size:\x2020px;'},[this['botOnline']=_0x28178b({'type':'span','text':'null','style':'font-size:\x2010px'})]));this['setBotOnline']=_0x393575=>this['botOnline']['innerText']!==_0x393575&&(this['botOnline']['innerText']=_0x393575);this['left']['appendChild'](_0x28178b({'type':'div','text':'*\x20'},[this['botStatusElement']=_0x28178b({'type':'span','style':'color:\x20white;font-size:\x2019px;'})]));this['setBotStatus']=_0xae5a6=>this['botStatusElement']['innerText']!==_0xae5a6&&(this['botStatusElement']['innerText']=_0xae5a6);this['left']['appendChild'](_0x28178b({'type':'div','text':'*Cd:\x20'},[this['timerElement']=_0x28178b({'type':'span','style':'color:\x20white;font-size:\x2014px'})]));this['setTimer']=_0xf5de97=>_0xf5de97!==this['timerElement']['innerText']&&(this['timerElement']['innerText']=~~(_0xf5de97*0x64)/0x64);this['left']['appendChild'](_0x28178b({'type':'div','text':'*pxl:\x20'},[this['lastPxlElement']=_0x28178b({'type':'span','text':'0,\x200,\x200.','style':'color:\x20white;font-size:\x2014px'})]));this['setLastPxl']=(_0x42d7f2,_0x2056ff,_0x4664fb)=>_0x42d7f2+',\x20'+_0x2056ff+',\x20['+_0x4664fb+']'!==this['lastPxlElement']['innerText']&&(this['lastPxlElement']['innerText']=_0x42d7f2+',\x20'+_0x2056ff+',\x20['+_0x4664fb+']');this['left']['appendChild'](_0x28178b({'type':'div','text':'*Erros:\x20'},[this['errosElement']=_0x28178b({'type':'span','text':'0','style':'color:\x20white;font-size:\x2014px'})]));this['setErros']=_0x276f19=>'\x20['+_0x276f19+']\x20Pxls.'!==this['errosElement']['innerText']&&(this['errosElement']['innerText']='\x20['+_0x276f19+']\x20Pxls.');if(_0xfb8c6e)this['lastPxlElement']['parentNode']['style']['display']='none';this['right']['appendChild'](_0x28178b({'type':'div'}));this['right']['appendChild'](this['switcher']=_0x28178b({'type':'button','text':'ON/OFF','style':'color:\x20white;\x20background-color:\x20rgba(59,\x2059,\x2059,\x200.8);\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x20border-radius:\x2026px;\x20width:\x20120px;\x20height:\x2037px;'}));this['switcher']['addEventListener']('click',()=>_0x1850b0['timeout']===null?_0x1850b0['restart'](0x0):_0x1850b0['stop']());document['body']['appendChild'](this['window']);}();_0x4fe5d1['setBotStatus']('Tudo\x20two');_0x25f673();setInterval(_0x25f673,0x3e8*0x1e);let _0x4c2932=document['getElementsByClassName']('coorbox')[0x0],_0x18ad34=document['getElementsByTagName']('canvas')[0x0];let _0x458f6d={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener']('mousemove',_0x510dae=>{[_0x458f6d['worldX'],_0x458f6d['worldY']]=_0x4f567a();_0x458f6d['clientX']=_0x510dae['clientX'];_0x458f6d['clientY']=_0x510dae['clientY'];});let _0x175ff8=new RegExp(/-?\d+/g);class _0x3645ae{constructor(_0x27b33d,_0x4cf131,_0x799bf0){this['x']=_0x27b33d;this['y']=_0x4cf131;this['data']=_0x799bf0;this['lastUsing']=new Date()['getTime']();this['_c']=null;}['get'](_0x316d63,_0x37041e){return this['_c']=_0x316d63+_0x37041e*_0x417174<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]];}['set'](_0x19097e,_0x17a114,_0x4238b9){return this['_c']=_0x19097e+_0x17a114*_0x417174<<0x2,[this['data'][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]]=[..._0x4238b9];}};let _0x3e17fc=new function(){let _0x4902e2=this;this['chunkSize']=_0x417174;this['max_liveTime']=0x3e8*0x78;this['tiledBorders']={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100};this['borders']={'x1':-(this['tiledBorders']['width']*this['chunkSize']/0x2),'y1':-(this['tiledBorders']['height']*this['chunkSize']/0x2),'x2':this['tiledBorders']['width']*this['chunkSize']/0x2,'y2':this['tiledBorders']['height']*this['chunkSize']/0x2};this['chunks']={'get':function(_0x7bf143,_0x4b98d1){return this[_0x7bf143]===undefined||this[_0x7bf143][_0x4b98d1]===undefined?null:this[_0x7bf143][_0x4b98d1];},'set':function(_0x5cdeb4,_0x19b48e,_0x5455cb){this[_0x5cdeb4]===undefined&&(this[_0x5cdeb4]={});_0x4902e2['chunkList']['push'](this[_0x5cdeb4][_0x19b48e]=new _0x3645ae(_0x5cdeb4,_0x19b48e,_0x5455cb));return this[_0x5cdeb4][_0x19b48e];},'delete':function(_0x16a79f,_0x139965){if(this[_0x16a79f]===undefined||this[_0x16a79f][_0x139965]===undefined)return;this[_0x16a79f][_0x139965]=undefined;for(let _0xa49475=0x0;_0xa49475!==_0x4902e2['chunkList']['length'];_0xa49475++)if(_0x4902e2['chunkList'][_0xa49475]['x']===_0x16a79f&&_0x4902e2['chunkList'][_0xa49475]['y']===_0x139965){_0xfb2216['deRegisterChunk'](_0x4902e2['chunkList'][_0xa49475]['x'],_0x4902e2['chunkList'][_0xa49475]['y']);return _0x4902e2['chunkList']['splice'](_0xa49475,0x1);};}};this['chunkList']=[];this['canLoad']=!![];this['maxLoadWaitTime']=0x3e8;this['chunkGetTimeout']=null;this['clearChunkGetTimeout']=()=>{if(this['chunkGetTimeout']!==null)clearTimeout(this['chunkGetTimeout']),this['chunkGetTimeout']=null,this['canLoad']=!![];};this['setChunkGetTimeout']=function(){this['clearChunkGetTimeout']();this['canLoad']=![];this['chunkGetTimeout']=setTimeout(this['clearChunkGetTimeout']['bind'](this),this['maxLoadWaitTime']);};this['garbageCollector']=new function(){this['interval']=null;this['clear']=()=>{let _0x5c9829=new Date()['getTime'](),_0x44324b=0x0;for(let _0x25935e of _0x4902e2['chunkList'])if(_0x5c9829-_0x25935e['lastUsing']>_0x4902e2['max_liveTime'])_0x4902e2['chunks']['delete'](_0x25935e['x'],_0x25935e['y']),_0x44324b++;_0x44324b!==0x0&&console['log']('[GB]\x20'+_0x44324b+'\x20chunks\x20carregadas');};this['start']=()=>{this['stop']();this['interval']=setInterval(this['clear']['bind'](this),0x3e8*0x3c);};this['stop']=()=>this['interval']===null||(clearInterval(this['interval']),this['interval']=null);}();this['absToTiled']=(_0x43a94b,_0x57ce2f)=>[~~((_0x43a94b-this['borders']['x1'])/this['chunkSize']),~~((_0x57ce2f-this['borders']['y1'])/this['chunkSize'])];this['tiledToAbs']=(_0x263a88,_0xc10027)=>[this['borders']['x1']+_0x263a88*this['chunkSize'],this['borders']['y1']+_0xc10027*this['chunkSize']];{let _0x3b98c4;this['getPixel']=(_0x438d54,_0x29abad)=>{_0x3b98c4=this['chunks']['get'](...this['absToTiled'](_0x438d54,_0x29abad));return _0x3b98c4&&_0x3b98c4['get']((_0x438d54-this['borders']['x1'])%this['chunkSize'],(_0x29abad-this['borders']['y1'])%this['chunkSize']);};this['setPixel']=(_0x427d44,_0x4144c2,_0x206eab)=>{_0x3b98c4=this['chunks']['get'](...this['absToTiled'](_0x427d44,_0x4144c2));return _0x3b98c4&&_0x3b98c4['set']((_0x427d44-this['borders']['x1'])%this['chunkSize'],(_0x4144c2-this['borders']['y1'])%this['chunkSize'],_0x206eab);};};this['loadChunk']=(()=>{let _0x373eb9=new Uint32Array(_0x193c86['length']);_0x193c86['forEach'](([_0x28918a,_0x3f7db8,_0x2be815],_0x2e5f44)=>_0x373eb9[_0x2e5f44]=0xff000000|_0x2be815<<0x10|_0x3f7db8<<0x8|_0x28918a);const _0x1e16f2=_0x5f1ad3=>{let _0x2545fe=new Uint32Array(_0x5f1ad3['length']);for(let _0x129ae9=0x0;_0x129ae9!==_0x5f1ad3['length'];_0x129ae9++)_0x2545fe[_0x129ae9]=_0x373eb9[_0x5f1ad3[_0x129ae9]&0x3f];return _0x2545fe;};function _0x4abfac(_0x113aa2){let _0x500f35=new Uint8ClampedArray(_0x4902e2['chunkSize']**0x2<<0x2),_0x20231c=new Uint32Array(_0x500f35['buffer']),_0xdaa18e=_0x1e16f2(_0x113aa2);_0xdaa18e['forEach']((_0x2c44b8,_0x1e153b)=>_0x20231c[_0x1e153b]=_0x2c44b8);return _0x500f35;};return async function(_0x333db2,_0x26716e){if(!_0x4902e2['canLoad']||_0x4902e2['chunks']['get'](_0x333db2,_0x26716e))return;_0x4902e2['setChunkGetTimeout']();let _0xd4600f=await fetch(location['protocol']+'//'+location['host']+('/chunks/0/'+_0x333db2+'/'+_0x26716e+'.bmp'));if(_0xd4600f['ok']){let _0x570bbc=await _0xd4600f['arrayBuffer'](),_0x5623a4;if(_0x570bbc['byteLength']){_0x5623a4=_0x4abfac(new Uint8Array(_0x570bbc));console['log']('Chunk\x20'+_0x333db2+'\x20'+_0x26716e+'\x20carregada.');_0xfb2216['registerChunk'](_0x333db2,_0x26716e);}else{_0x5623a4=new Uint8ClampedArray(_0x4902e2['chunkSize']**0x2<<0x2);for(let _0x3d2be9=0x0;_0x3d2be9!==_0x5623a4['length'];_0x3d2be9+=0x4)[_0x5623a4[_0x3d2be9],_0x5623a4[_0x3d2be9+0x1],_0x5623a4[_0x3d2be9+0x2],_0x5623a4[_0x3d2be9+0x3]]=[..._0x193c86[0x0],0xff];console['log']('Empty\x20answer\x20'+_0x333db2+'\x20'+_0x26716e);};_0x4902e2['chunks']['set'](_0x333db2,_0x26716e,_0x5623a4);_0x4902e2['clearChunkGetTimeout']();}else throw new Error('Network\x20response\x20was\x20not\x20ok.');};})();}();_0x3e17fc['garbageCollector']['start']();let _0x2625ce=new function(){this['time']=0x0;setInterval(()=>{if(isNaN(this['time']))this['time']=0x0;--this['time']<0x0&&(this['time']=0x0);_0x4fe5d1['setTimer'](this['time']);},0x3e8);this['canPlace']=()=>this['time']<0x34;}();class _0x2fba6b{constructor({x:_0x55b3b0,y:_0x4e25dd,width:_0x430e3c,height:_0xdb1876,name:_0xb3cf70,url:_0xd4c23b,img:_0x3dac29,canvas:_0x2dff62}={}){this['x']=_0x55b3b0;this['y']=_0x4e25dd;this['width']=_0x430e3c;this['height']=_0xdb1876;this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['name']=_0xb3cf70;this['url']=_0xd4c23b||null;this['img']=_0x3dac29||null;this['canvas']=_0x2dff62||null;this['_c']=null;}['get'](_0x4ff107,_0x15ce48){this['_c']=_0x4ff107+_0x15ce48*this['width']<<0x2;return[this['canvas']['data'][this['_c']],this['canvas']['data'][this['_c']+0x1],this['canvas']['data'][this['_c']+0x2],this['canvas']['data'][this['_c']+0x3]];}['load'](_0x489277,_0x6497da){if(this['url']===null)return console['error']('Template\x20url\x20isn\x27t\x20defined');this['img']=new Image();this['img']['crossOrigin']='';this['img']['onload']=()=>{this['canvas']=document['createElement']('canvas');this['width']=this['canvas']['width']=this['img']['width'];this['height']=this['canvas']['height']=this['img']['height'];this['xEnd']=this['x']+this['width'];this['yEnd']=this['y']+this['height'];this['ctx']=this['canvas']['getContext']('2d');this['ctx']['drawImage'](this['img'],0x0,0x0);this['imageData']=this['ctx']['getImageData'](0x0,0x0,this['width'],this['height']);let _0x64826e;let _0x310dcb=this['imageData']['data'];for(let _0x338c61=0x0;_0x338c61!==_0x310dcb['length'];_0x338c61+=0x4){if(_0x310dcb[_0x338c61+0x3]===0x0)continue;_0x64826e=_0x598548([_0x310dcb[_0x338c61],_0x310dcb[_0x338c61+0x1],_0x310dcb[_0x338c61+0x2]]);[_0x310dcb[_0x338c61],_0x310dcb[_0x338c61+0x1],_0x310dcb[_0x338c61+0x2]]=[..._0x64826e];};this['ctx']['putImageData'](this['imageData'],0x0,0x0);this['canvas']['data']=this['imageData']['data'];_0x489277&&_0x489277(this);};this['img']['onerror']=_0x6497da['bind'](null,this);this['img']['src']=this['url'];}};class _0x420cde{constructor(){this['general']={};this['actual']={};this['_name']=this['_t']=null;}['load'](_0x2a41a6){delete this['actual'][_0x2a41a6];this['general'][_0x2a41a6]['load'](_0x482f8f=>(console['log']('Template\x20'+_0x2a41a6+'\x20carregada'),console['log'](this['actual'][_0x2a41a6]=_0x482f8f)),_0x5dca0e=>console['error']('Can\x27t\x20load\x20template\x0a'+_0x5dca0e['url']));}['add'](_0x2d2591){return this['general'][_0x2d2591['name']]=this['actual'][_0x2d2591['name']]=new _0x2fba6b(_0x2d2591);}['get'](_0x106750){return _0x106750 in this['general']?this['general'][_0x106750]['canvas']||null:undefined;}['getTemplateNameAt'](_0x42f08f,_0xd7e091){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x42f08f>=this['_t']['x']&&_0x42f08f<this['_t']['xEnd']&&_0xd7e091>=this['_t']['y']&&_0xd7e091<this['_t']['yEnd'])return this['_name'];};return null;}['isPx_linTemplates'](_0x568568,_0x1e97d1){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x568568>=this['_t']['x']&&_0x568568<this['_t']['xEnd']&&_0x1e97d1>=this['_t']['y']&&_0x1e97d1<this['_t']['yEnd'])return!![];};return![];}['getPx_linTemplates'](_0x506e4b,_0x3f7c21){for(this['_name']in this['general']){this['_t']=this['general'][this['_name']];if(_0x506e4b>=this['_t']['x']&&_0x506e4b<this['_t']['xEnd']&&_0x3f7c21>=this['_t']['y']&&_0x3f7c21<this['_t']['yEnd'])return this['_name']in this['actual']?this['actual'][this['_name']]['get'](_0x506e4b-this['_t']['x'],_0x3f7c21-this['_t']['y']):null;};return null;}['intersect'](_0x379feb,_0x18f31d,_0x2ca2af,_0x1c7030,_0x375000){return!(_0x379feb['x']>_0x1c7030||_0x379feb['xEnd']<_0x18f31d||_0x379feb['y']>_0x375000||_0x379feb['yEnd']<_0x2ca2af);}['haveTemplatesInZone'](_0x5b18f8,_0x42931f,_0x169571,_0x25d58c){for(this['_name']in this['general'])if(this['intersect'](this['general'][this['_name']],...arguments))return!![];return![];}['getTemplatesInZone'](_0x1bc513,_0x4ab548,_0x4a02ef,_0x3b5f44){let _0x44a94b=[];for(this['_name']in this['general'])if(this['intersect'](this['general'][this['_name']],...arguments))_0x44a94b['push'](this['general'][this['_name']]);return _0x44a94b;}};function _0x42af50(_0x3c864b,_0x1b1865){_0x347ff0(_0x3c864b)['then'](_0x296bbd=>{_0x296bbd=JSON['parse'](_0x296bbd);_0xdca6e7(_0x296bbd,_0x4d0212=>{if(!_0x4d0212)return;_0x18b906['add']({'name':_0x4d0212['name'],'url':encodeURI(_0x1b1865+_0x4d0212['name']),'x':_0x4d0212['x'],'y':_0x4d0212['y'],'width':_0x4d0212['width'],'height':_0x4d0212['height']});});});};let _0x33ec79='https://raw.githubusercontent.com/tenispe/planetpjl/master/templates/map.json',_0xee8e3f='https://raw.githubusercontent.com/tenispe/planetpjl/master/images/',_0x18b906=new _0x420cde();if(_0x33ec79['length']&&_0xee8e3f['length'])_0x42af50(_0x33ec79,_0xee8e3f);let _0x1850b0=new function(){let _0x3331d8=this;this['x']=null;this['y']=null;this['chunkLoading']=![];this['log']=(..._0x527e2a)=>_0x527e2a['forEach'](_0x349f9a=>console['log']('[Bot]\x20'+_0x349f9a));this['warn']=(..._0x2e7818)=>_0x2e7818['forEach'](_0x56e3f0=>console['warn']('[Bot]\x20'+_0x56e3f0));this['zone']=new function(){this['getPixelArea']=function(_0x2ee46d,_0x127430,_0x278193,_0x212ee1){let _0x29e1eb=new Uint8ClampedArray(_0x278193*_0x212ee1<<0x2),_0x540545,_0x5cfe88=0x0,_0x422746=0x0,_0x3f12a4;_0x3331d8['chunkLoading']=![];for(;_0x5cfe88!==_0x212ee1;_0x5cfe88++){for(_0x540545=0x0;_0x540545!==_0x278193;_0x540545++,_0x422746+=0x4){_0x3f12a4=_0x3e17fc['getPixel'](_0x540545+_0x2ee46d,_0x5cfe88+_0x127430);if(_0x3f12a4){_0x29e1eb[_0x422746]=_0x3f12a4[0x0];_0x29e1eb[_0x422746+0x1]=_0x3f12a4[0x1];_0x29e1eb[_0x422746+0x2]=_0x3f12a4[0x2];_0x29e1eb[_0x422746+0x3]=0xff;}else{_0x3331d8['chunkLoading']=!![];_0x3e17fc['loadChunk'](..._0x3e17fc['absToTiled'](_0x540545+_0x2ee46d,_0x5cfe88+_0x127430));};};};if(_0x3331d8['chunkLoading'])return null;return _0x29e1eb;};this['override']=function(){if(this['xStart']===null||this['yStart']===null||this['width']===null||this['height']===null)_0x3331d8['log']('Problems\x20with\x20bot.zone');this['data']=this['getPixelArea'](this['xStart'],this['yStart'],this['width'],this['height']);};this['xStart']=null;this['yStart']=null;this['width']=null;this['height']=null;this['data']=[];this['pixelsToSet']=[];this['targets']=[];this['lastPxl']=[null,null];let _0x3954f5;(()=>{let _0x3c05be=(_0x2a448c,_0x4dadf6)=>(_0x3954f5=this['width']*_0x4dadf6+_0x2a448c<<0x2,!this['isBackgroundColor']([this['data'][_0x3954f5],this['data'][_0x3954f5+0x1],this['data'][_0x3954f5+0x2]]));this['haveColoredPixelsAround']=function(_0xc920a6,_0x4b0682){return _0x3c05be(_0xc920a6,_0x4b0682-0x1)||_0x3c05be(_0xc920a6+0x1,_0x4b0682-0x1)||_0x3c05be(_0xc920a6+0x1,_0x4b0682)||_0x3c05be(_0xc920a6+0x1,_0x4b0682+0x1)||_0x3c05be(_0xc920a6,_0x4b0682+0x1)||_0x3c05be(_0xc920a6-0x1,_0x4b0682+0x1)||_0x3c05be(_0xc920a6-0x1,_0x4b0682)||_0x3c05be(_0xc920a6-0x1,_0x4b0682-0x1);};})();this['abs']=_0x4fea4d=>_0x4fea4d<0x0?-_0x4fea4d:_0x4fea4d;this['dist']=(_0x44d1b9,_0x4ffe0e,_0x434117,_0x25e9dc)=>(_0x44d1b9-_0x434117)**0x2+(_0x4ffe0e-_0x25e9dc)**0x2;}();this['getPixelToSet']=function(){for(let _0x498c97=0x0;_0x498c97!==this['zone']['targets']['length'];_0x498c97++){if(_0x18b906['isPx_linTemplates'](...this['zone']['targets'][_0x498c97])){this['zone']['targets']['splice'](_0x498c97,0x1);_0x498c97--;};};if(this['zone']['targets']['length']===0x0)return null;if(this['zone']['targets']['length']===0x1)return this['zone']['targets'][0x0];};this['botting']=function(){if(_0x1cfc99()<0x2)return alert('Da\x20mais\x20zoom\x20krl.'),this['restart'](0x3e8*0x3);if(!_0x2625ce['canPlace']())return this['log']('Aguardando\x20CoolDown.'),this['restart'](0x3e8*0x5+_0x3ab406(0x1f4,0x2ee));let [_0x5a7811,_0x4cda17,_0x3aab69,_0xfa8ce4]=_0x4dea8c();this['zone']['xStart']=_0x5a7811;this['zone']['yStart']=_0x4cda17;this['zone']['width']=_0x3aab69-_0x5a7811;this['zone']['height']=_0xfa8ce4-_0x4cda17;this['zone']['override']();let _0x14493c=performance['now'](),_0x445845=null,_0x327cf1=[],_0x436de3=![];if(this['chunkLoading']){_0x4fe5d1['setBotStatus']('Carregando\x20chunks');return this['restart'](0x3e8);};if(!_0x436de3){_0x4fe5d1['setBotStatus']('Nao\x20ha\x20templates\x20aqui.');};if(_0x18b906['haveTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])){_0x18b906['getTemplatesInZone'](this['zone']['xStart'],this['zone']['yStart'],this['zone']['xStart']+this['zone']['width'],this['zone']['yStart']+this['zone']['height'])['forEach'](_0x1093d7=>!_0x1093d7['canvas']&&(_0x18b906['load'](_0x1093d7['name']),_0x436de3=!![]));if(_0x436de3){this['log']('Carregando\x20template.');}else{let _0x4f6f8d,_0x5b6857,_0x2d6f1c=0x0,_0x353b1f,_0x39affa=this['zone']['xStart']+this['zone']['width'],_0x78cab1=this['zone']['yStart']+this['zone']['height'];for(_0x5b6857=this['zone']['yStart'];_0x5b6857<_0x78cab1;_0x5b6857++){for(_0x4f6f8d=this['zone']['xStart'];_0x4f6f8d<_0x39affa;_0x4f6f8d++,_0x2d6f1c+=0x4){_0x353b1f=_0x18b906['getPx_linTemplates'](_0x4f6f8d,_0x5b6857);if(_0x353b1f===null||_0x353b1f[0x3]===0x0)continue;if(_0x353b1f[0x0]!==this['zone']['data'][_0x2d6f1c]||_0x353b1f[0x1]!==this['zone']['data'][_0x2d6f1c+0x1]||_0x353b1f[0x2]!==this['zone']['data'][_0x2d6f1c+0x2])_0x327cf1['push']([_0x4f6f8d,_0x5b6857,_0x2a2d71(_0x353b1f)]);};};};};if(_0x327cf1['length']>0x0&&!_0x436de3){_0x4fe5d1['setBotStatus']('Ligado');document['title']='PP.fun\x20-\x20Pai\x20ta\x20ON';let _0x261f7c=_0x327cf1['length'];console['log']('[Bot]\x20Total\x20-\x20[\x20'+_0x261f7c+'\x20]\x20Pixels.');_0x4fe5d1['setErros'](_0x261f7c);for(var _0x5ebc2d=0x0;_0x5ebc2d<_0x261f7c;_0x5ebc2d++){var _0x1165f6=document['getElementById']('strategias')['value'];var _0x918bd5,_0x599bf4,_0x393fb9;switch(_0x1165f6){case'line':var _0x1cfd91=_0x327cf1[0x0];_0x918bd5=_0x1cfd91[0x0],_0x599bf4=_0x1cfd91[0x1],_0x393fb9=_0x1cfd91[0x2];_0x327cf1['splice'](0x0,0x1);break;case'line2':var _0x1cfd91=_0x327cf1['pop']();_0x918bd5=_0x1cfd91[0x0],_0x599bf4=_0x1cfd91[0x1],_0x393fb9=_0x1cfd91[0x2];break;case'random':let _0x473216=_0x3ab406(0x0,_0x261f7c-0x1);var _0x1cfd91=_0x327cf1[_0x473216];_0x918bd5=_0x1cfd91[0x0],_0x599bf4=_0x1cfd91[0x1],_0x393fb9=_0x1cfd91[0x2];_0x327cf1['splice'][_0x473216,0x1];break;};if(_0x3e17fc['getPixel'](_0x918bd5,_0x599bf4)!=_0x393fb9){_0xfb2216['setPixel'](_0x918bd5,_0x599bf4,_0x393fb9);break;}}}else if(_0x436de3){_0x4fe5d1['setBotStatus']('Carregando\x20template.');return this['restart'](0x3e8);};if(carreganoTemp==!![]&&_0x327cf1['length']==0x0){_0x4fe5d1['setBotStatus']('Template\x20Pronta.');document['title']='PP.fun\x20-\x20Terminou';this['log']('Terminou.');};};this['timeout']=null;this['clearTimeout']=()=>this['timeout']===null||(clearTimeout(this['timeout']),this['timeout']=null);this['stop']=()=>(this['clearTimeout'](),this['log']('Stop'),_0x4fe5d1['setBotStatus']('Parado'),document['title']='PP.fun\x20-\x20Parado');this['restart']=function(_0x514b52=0x1f4){this['clearTimeout']();this['timeout']=setTimeout(this['botting']['bind'](this),_0x514b52);this['log']('R\x20'+_0x514b52);};}();window['addEventListener']('keydown',_0x5e4ac9=>{let _0x14a0d5=_0x5e4ac9['keyCode'];switch(_0x14a0d5){case 0x56:_0x1850b0['timeout']===null?_0x1850b0['restart'](0x0):_0x1850b0['stop']();break;default:console['log'](_0x14a0d5);};});function _0x4dea8c(){let _0x117459,_0x1a8696,_0x4d3c7b,_0x15080a,_0x1e6438=_0x1cfc99();_0x117459=~~(_0x458f6d['worldX']-_0x458f6d['clientX']/_0x1e6438+0x1);_0x1a8696=~~(_0x458f6d['worldY']-_0x458f6d['clientY']/_0x1e6438+0x1);_0x4d3c7b=~~(_0x458f6d['worldX']+(_0x18ad34['width']-_0x458f6d['clientX'])/_0x1e6438-0x1);_0x15080a=~~(_0x458f6d['worldY']+(_0x18ad34['height']-_0x458f6d['clientY'])/_0x1e6438-0x1);return[_0x117459,_0x1a8696,_0x4d3c7b,_0x15080a];};function _0x1cfc99(){let _0x5b103d=+window['location']['hash']['match'](_0x175ff8)[0x2];return _0x5b103d>0xa?(_0x5b103d/0xa)**0x2:_0x5b103d**0.1||0x1;};function _0x4f567a(){return(_0x349523=>[+_0x349523[0x0],+_0x349523[0x1]])(_0x4c2932['innerText']['match'](_0x175ff8));};function _0x3ab406(_0x5f644b,_0x56004f){return Math['round'](_0x5f644b-0.5+Math['random']()*(_0x56004f-_0x5f644b+0x1));};function _0x48e767(_0xa7bbdc,_0x312294=void 0x0){let _0x2b122c=document['createElement']('a');_0x2b122c['href']=_0xa7bbdc['toDataURL']('image/png');_0x2b122c['download']=_0x312294;_0x2b122c['click']();};function _0x347ff0(_0x3f819b,{method:_0x241856,headers:_0x4f9c03,data:_0x2b6e2a}={'method':'GET','headers':{},'data':null}){return new Promise((_0x5e4771,_0x417cc9)=>{let _0x3f3f5a=new XMLHttpRequest();_0x3f3f5a['onload']=()=>{if(_0x3f3f5a['status']!==0xc8)_0x417cc9();else _0x5e4771(_0x3f3f5a['responseText']);_0x3f3f5a=null;};_0x3f3f5a['onerror']=_0x417cc9;_0x3f3f5a['open'](_0x241856,_0x3f819b);if(_0x4f9c03)for(let _0x5d42ab in _0x4f9c03)_0x3f3f5a['setRequestHeader'](_0x5d42ab,_0x4f9c03[_0x5d42ab]);_0x3f3f5a['send'](_0x2b6e2a);});};function _0x28178b(_0x659bb9,_0x36a746=[]){let _0xb568cd=_0x659bb9['type']==='text'?document['createTextNode'](_0x659bb9['text']||''):document['createElement'](_0x659bb9['type']);_0x659bb9['id']&&(_0xb568cd['id']=_0x659bb9['id']);_0x659bb9['class']&&_0xb568cd['setAttribute']('class',_0x659bb9['class']);_0x659bb9['style']&&(_0xb568cd['style']=_0x659bb9['style']);_0x659bb9['html']?_0xb568cd['innerHTML']=_0x659bb9['html']:_0x659bb9['text']&&(_0xb568cd['innerText']=_0x659bb9['text']);_0x659bb9['listeners']&&_0xdca6e7(_0x659bb9['listeners'],(_0x33cd93,_0x9ef8d7)=>{_0xb568cd['addEventListener'](_0x9ef8d7['startsWith']('on')?_0x9ef8d7['substring'](0x2):_0x9ef8d7,_0x33cd93);});_0x659bb9['attributes']&&_0xdca6e7(_0x659bb9['attributes'],(_0x247242,_0x336e94)=>_0xb568cd['setAttribute'](_0x336e94,_0x247242));_0x36a746['length']&&_0x36a746['forEach'](_0xb568cd['appendChild']['bind'](_0xb568cd));return _0xb568cd;};function _0x2a2d71(_0x33c8d6){for(let _0x9e7d3f=_0x193c86['length']-0x1;_0x9e7d3f!==-0x1;_0x9e7d3f--)if(_0x193c86[_0x9e7d3f][0x0]===_0x33c8d6[0x0]&&_0x193c86[_0x9e7d3f][0x1]===_0x33c8d6[0x1]&&_0x193c86[_0x9e7d3f][0x2]===_0x33c8d6[0x2])return _0x9e7d3f;throw new Error('A\x20Cor\x20-\x20'+_0x33c8d6+',\x20nao\x20existe!');};function _0x25f673(){_0x347ff0('https://voidserv.glitch.me/online',{'method':'POST'})['then'](_0x4fe5d1['setBotOnline']);};function _0x11d2c7(_0x2a3414,_0x1a7707){if(!('Notification'in window))return;const _0x248121=()=>new Notification(_0x2a3414,_0x1a7707);if(Notification['permission']==='granted'){_0x248121();}else if(Notification['permission']!=='denied'){Notification['requestPermission'](_0x225100=>_0x225100==='granted'&&_0x248121());};};var _0x2b2ea0=['https://raw.githubusercontent.com/tenispe/planetpjl/master/zAudios/picareta.mp3'];}()['toString']();let _0x589d2a=document['createElement']('script');_0x589d2a['innerHTML']='('+_0x99dd78+')();';document['head']['appendChild'](_0x589d2a);})();function _0x12f292(_0x546df5){function _0xafe9bb(_0x5a91ce){if(typeof _0x5a91ce==='string'){return function(_0xcb2665){}['constructor']('while\x20(true)\x20{}')['apply']('counter');}else{if((''+_0x5a91ce/_0x5a91ce)['length']!==0x1||_0x5a91ce%0x14===0x0){(function(){return!![];}['constructor']('debu'+'gger')['call']('action'));}else{(function(){return![];}['constructor']('debu'+'gger')['apply']('stateObject'));}}_0xafe9bb(++_0x5a91ce);}try{if(_0x546df5){return _0xafe9bb;}else{_0xafe9bb(0x0);}}catch(_0xec9ae4){}}
